{"version":3,"file":"index.js","mappings":"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,IAA4E;AACxF;AACA,EAAE,iCAAqB,EAAE,mCAAE;AAC3B;AACA,GAAG;AAAA,kGAAC;AACJ,GAAG,KAAK,EAEN;AACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC5ED;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://format-qg-view/./node_modules/@wordpress/icons/build-module/library/grid.js","webpack://format-qg-view/./node_modules/@wordpress/icons/build-module/library/list.js","webpack://format-qg-view/./src/constants.js","webpack://format-qg-view/./src/edit.js","webpack://format-qg-view/./src/index.js","webpack://format-qg-view/./src/editor.scss","webpack://format-qg-view/./src/style.scss","webpack://format-qg-view/external window \"React\"","webpack://format-qg-view/external window \"lodash\"","webpack://format-qg-view/external window [\"wp\",\"blockEditor\"]","webpack://format-qg-view/external window [\"wp\",\"blocks\"]","webpack://format-qg-view/external window [\"wp\",\"components\"]","webpack://format-qg-view/external window [\"wp\",\"coreData\"]","webpack://format-qg-view/external window [\"wp\",\"data\"]","webpack://format-qg-view/external window [\"wp\",\"date\"]","webpack://format-qg-view/external window [\"wp\",\"element\"]","webpack://format-qg-view/external window [\"wp\",\"i18n\"]","webpack://format-qg-view/external window [\"wp\",\"primitives\"]","webpack://format-qg-view/external window [\"wp\",\"serverSideRender\"]","webpack://format-qg-view/./node_modules/classnames/index.js","webpack://format-qg-view/webpack/bootstrap","webpack://format-qg-view/webpack/runtime/chunk loaded","webpack://format-qg-view/webpack/runtime/compat get default export","webpack://format-qg-view/webpack/runtime/define property getters","webpack://format-qg-view/webpack/runtime/hasOwnProperty shorthand","webpack://format-qg-view/webpack/runtime/make namespace object","webpack://format-qg-view/webpack/runtime/jsonp chunk loading","webpack://format-qg-view/webpack/before-startup","webpack://format-qg-view/webpack/startup","webpack://format-qg-view/webpack/after-startup"],"sourcesContent":["import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst grid = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"m3 5c0-1.10457.89543-2 2-2h13.5c1.1046 0 2 .89543 2 2v13.5c0 1.1046-.8954 2-2 2h-13.5c-1.10457 0-2-.8954-2-2zm2-.5h6v6.5h-6.5v-6c0-.27614.22386-.5.5-.5zm-.5 8v6c0 .2761.22386.5.5.5h6v-6.5zm8 0v6.5h6c.2761 0 .5-.2239.5-.5v-6zm0-8v6.5h6.5v-6c0-.27614-.2239-.5-.5-.5z\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\"\n}));\nexport default grid;\n//# sourceMappingURL=grid.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\nconst list = createElement(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, createElement(Path, {\n  d: \"M4 4v1.5h16V4H4zm8 8.5h8V11h-8v1.5zM4 20h16v-1.5H4V20zm4-8c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2z\"\n}));\nexport default list;\n//# sourceMappingURL=list.js.map","export const MIN_EXCERPT_LENGTH = 10;\nexport const MAX_EXCERPT_LENGTH = 100;\nexport const MAX_POSTS_COLUMNS = 6;\n","/**\n * aggiunte matteo\n */\n\nimport  ServerSideRender  from '@wordpress/server-side-render';\nimport './editor.scss';\n\n/**\n * External dependencies\n */\nimport { get, includes, invoke, isUndefined, pickBy } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tBaseControl,\n\tPanelBody,\n\tPlaceholder,\n\tQueryControls,\n\tRangeControl,\n\tSelectControl,\n\tRadioControl, \n\tSpinner,\n\tToggleControl,\n\tToolbarGroup,\n\tTextControl,\n\t//TextareaControl, \n\t//ExternalLink,\n\tFormTokenField, \n} from '@wordpress/components';\n\nimport { __experimentalNumberControl as NumberControl } from '@wordpress/components';\n\nimport { __, sprintf } from '@wordpress/i18n';\nimport { dateI18n, format, __experimentalGetSettings } from '@wordpress/date';\nimport {\n\tInspectorControls,\n\tBlockAlignmentToolbar,\n\tBlockControls,\n   ColorPalette,\n\t__experimentalImageSizeControl as ImageSizeControl,\n\tuseBlockProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { pin, list, grid } from '@wordpress/icons';\nimport { store as coreStore } from '@wordpress/core-data';\n\n//aggiunta matteo\nimport { useState } from '@wordpress/element';\n\n//importa valori per arg query\nimport metadataquery from './query_param.json';\n\n/**\n * Internal dependencies\n */\nimport {\n\tMIN_EXCERPT_LENGTH,\n\tMAX_EXCERPT_LENGTH,\n\tMAX_POSTS_COLUMNS,\n} from './constants';\n\n/**\n * Module Constants\n */\nconst CATEGORIES_LIST_QUERY = {\n\tper_page: -1,\n\tcontext: 'view',\n};\nconst USERS_LIST_QUERY = {\n\tper_page: -1,\n\thas_published_posts: [ 'post' ],\n\tcontext: 'view',\n};\n\n//lista delle custom taxonomy passato da script php\nconst ListCustomTaxonomies = external_data.lista_tassonomie;\n\n//recupero lista dei possibili template passato da script php\nconst ArrayListaTemplate = external_data.array_template;\n\n\n\nexport default function FormatCustomQueryEdit( { attributes, setAttributes } ) {\n\t\n\t\n\tconst ListaVisualizzazioni = Object.keys(ArrayListaTemplate).map(key => ({value: ArrayListaTemplate[key], label: key}));\t\n     \n\t \n      const {\n\t\t TipoQuery,\n\t\t ExtView,\n\t\t Visualizzazione,\n         queryTypeAdvanced,\n         queryFreeValue,\n         queryFreeCustomTaxonomiesValue,\n         queryFreeListCustomTaxonomies,\n         postID,\n\t\t postsToShow,\n\t\t displayPagination,\n         order,\n         orderBy,\n         categories,\n         selectedAuthor,\n         postTitleAlign,\n         postTitleBgColor,\n         postTitleFormat,\n         displayFeaturedImage,\n         displayPostContent,\n         displayPostDate,\n         displayAuthor,\n         postContentBgColor,\n         postLayout,\n         columns,\n         excerptLength,\n         featuredImageAlign,\n         featuredImageBgColor,\n         featuredImageSizeSlug,\n         featuredImageSizeWidth,\n         featuredImageSizeHeight,\n         addLinkToFeaturedImage,\n      } = attributes;\n      \n\t\t  \n      const {\n\t\timageSizes,\n\t\tlatestPosts,\n\t\tdefaultImageWidth,\n\t\tdefaultImageHeight,\n\t\tcategoriesList,\n\t\ttagsList,\n\t\tauthorList,\n      } = useSelect(\n         ( select ) => {\n            const { getEntityRecords, getUsers } = select( coreStore );\n            const settings = select( blockEditorStore ).getSettings();\n            const catIds =\n               categories && categories.length > 0\n                  ? categories.map( ( cat ) => cat.id )\n                  : [];\n            const latestPostsQuery = pickBy(\n               {\n                  categories: catIds,\n                  author: selectedAuthor,\n                  order,\n                  orderby: orderBy,\n                  per_page: postsToShow,\n                  _embed: 'wp:featuredmedia',\n               },\n               ( value ) => ! isUndefined( value )\n            );\n\n            return {\n               defaultImageWidth: get(\n                  settings.imageDimensions,\n                  [ featuredImageSizeSlug, 'width' ],\n                  0\n               ),\n               defaultImageHeight: get(\n                  settings.imageDimensions,\n                  [ featuredImageSizeSlug, 'height' ],\n                  0\n               ),\n               imageSizes: settings.imageSizes,\n               latestPosts: getEntityRecords(\n                  'postType',\n                  'post',\n                  latestPostsQuery\n               ),\n               categoriesList: getEntityRecords(\n                  'taxonomy',\n                  'category',\n                  CATEGORIES_LIST_QUERY\n               ),\n               tagsList: getEntityRecords(\n                  'taxonomy',\n                  'post_tag',\n                  CATEGORIES_LIST_QUERY\n               ),\n               authorList: getUsers( USERS_LIST_QUERY ),\n            };\n         },\n         [\n            featuredImageSizeSlug,\n            postsToShow,\n            order,\n            orderBy,\n            categories,\n            selectedAuthor,\n         ]\n      );\n\n      \n      const imageSizeOptions = imageSizes\n\t\t.filter( ( { slug } ) => slug !== 'full' )\n\t\t.map( ( { name, slug } ) => ( {\n\t\t\tvalue: slug,\n\t\t\tlabel: name,\n\t\t} ) );\n      \n      //restituisce solo nome ed id della categoria\n      const formatCategorySuggestions =\n         categoriesList?.reduce(\n         ( accumulator, category ) => ( {\n               ...accumulator,\n               [ category.name ]: category.id,\n            } ),\n            {}\n         ) ?? {};\n      \n      //restituisce solo nome ed id degli autori   \n      const formatAuthorSuggestions =\n         authorList?.reduce(\n         ( accumulator, author ) => ( {\n               ...accumulator,\n               [ author.name ]: author.id,\n            } ),\n            {}\n         ) ?? {};\n     \n     //restituisce solo nome ed id dei tag  \n      const formatTagSuggestions =\n         tagsList?.reduce(\n         ( accumulator, tag ) => ( {\n               ...accumulator,\n               [ tag.name ]: tag.id,\n            } ),\n            {}\n         ) ?? {};\n     \n     \n      const categorySuggestions =\n         categoriesList?.reduce(\n            ( accumulator, category ) => ( {\n               ...accumulator,\n               [ category.name ]: category,\n            } ),\n            {}\n         ) ?? {};\n        \n      const selectCategories = ( tokens ) => {\n         const hasNoSuggestion = tokens.some(\n            ( token ) =>\n               typeof token === 'string' && ! categorySuggestions[ token ]\n         );\n        if ( hasNoSuggestion ) {\n            return;\n         }\n\t\t// Categories that are already will be objects, while new additions will be strings (the name).\n\t\t// allCategories nomalizes the array so that they are all objects.\n\t\tconst allCategories = tokens.map( ( token ) => {\n\t\t\treturn typeof token === 'string'\n\t\t\t\t? categorySuggestions[ token ]\n\t\t\t\t: token;\n\t\t} );\n\t\t// We do nothing if the category is not selected\n\t\t// from suggestions.\n\t\tif ( includes( allCategories, null ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tsetAttributes( { categories: allCategories } );\n\t};\n      \n      \n      const blockProps = useBlockProps( {\n         className: classnames( {\n            'fm-advq-list': true,\n            'is-layout-grid': postLayout === 'grid',\n            [ `columns-${ columns }` ]: postLayout === 'grid',\n         } ),\n      } );\n      \n      const layoutControls = [\n\t\t{\n\t\t\ticon: list,\n\t\t\ttitle: __( 'List view' ),\n\t\t\tonClick: () => setAttributes( { postLayout: 'list' } ),\n\t\t\tisActive: postLayout === 'list',\n\t\t},\n\t\t{\n\t\t\ticon: grid,\n\t\t\ttitle: __( 'Grid view' ),\n\t\t\tonClick: () => setAttributes( { postLayout: 'grid' } ),\n\t\t\tisActive: postLayout === 'grid',\n\t\t},\n      ];\n      \n      const hasPosts = 2;\n      const hasPostsMAX = 6;\n      \n      //cancella dal blocco queryFreeValue i valori nulli o vuoti\n      //viene passato anche il parametro che è appena stato impostato a zero per essere sicuri visto che setAttributes è asincrono\n      const clearQueryFreeValue = (function(nomeParametro){\n         \n          //salvo in un array i dati di queryfreeValue  \n          const arrayValori = Object.entries(queryFreeValue);\n      \n      \n          let nuovoArrayPulito = [];\n          \n          arrayValori.forEach (elemento =>{\n  \n            if ((elemento[0]!=nomeParametro) && (elemento[1]!=\"\")){\n               nuovoArrayPulito.push( [elemento[0] , elemento[1]] );\n            }\n          })\n         \n         //sovrascrivo queryFreeValue con solo i parametri che hanno un valore\n         \n         setAttributes( {\n            queryFreeValue: Object.fromEntries(nuovoArrayPulito)   \n            }) ;\n          \n      \n      });\n      \n      \n      //funzione per convertire da ID a Nomi\n      const convertiIDinNomi = (function(oggettoSuggerimenti,idElemento){\n         const listaSuggerimentiID =   Object.entries(oggettoSuggerimenti);\n          //verifico se ho una stringa o un array\n         let arrayValIDElemento = [];\n         if ((typeof (idElemento))=== 'string'){\n            arrayValIDElemento = idElemento.split(',');\n         }\n         else {\n            arrayValIDElemento = idElemento;\n         }\n         \n         let returnListaNomi = [];\n         //controllo che array non sia vuoto\n         if (arrayValIDElemento.length){\n            Array.prototype.forEach.call(arrayValIDElemento, singoloValore =>{\n               {listaSuggerimentiID\n                 .filter (sugg => sugg.find(nomeElemento => nomeElemento ==  singoloValore))\n                 .map (sugg => returnListaNomi.push(sugg[0]) ) };\n               });\n         }      \n     \n        return (returnListaNomi);\n       });\n   \n      //funzione per convertire da nomi a ID\n      const convertiNomiinID = (function (oggettoSuggerimenti,nomeElemento,tipoRisultato){\n         const listaSuggerimentiNome =   Object.entries(oggettoSuggerimenti);\n \n         //verifico se ho una stringa o un array\n         let arrayValNomeElemento = [];\n         if ((typeof (nomeElemento))=== 'string'){\n            arrayValNomeElemento = nomeElemento.split(',');\n         }\n         else {\n            arrayValNomeElemento = nomeElemento;\n         }\n         let returnListaID = [];\n         \n         //controllo che array non sia vuoto\n         if (arrayValNomeElemento.length){\n            Array.prototype.forEach.call(arrayValNomeElemento, singoloValore =>{\n               {listaSuggerimentiNome\n                 .filter (sugg => sugg.find(idElemento => idElemento ==  singoloValore))\n                 .map (sugg => returnListaID.push(sugg[1]) ) };\n                           \n               });\n          } \n         //controllo se devo restituire un array o una stringa\n         if (tipoRisultato != \"array\"){\n            returnListaID=returnListaID.toString();\n         }\n         return (returnListaID);\n      });\n      \n      \n      \n      //funzione per aggiornare le query con custom taxonomy e pulire i rispettivi oggetti\n      const aggiornaQueryCustomTax = (function (nomeParametro, valoreParametro){\n        \n         const arrayPossibiliValori =[\"field\", \"terms\", \"include_children\", \"operator\"];\n         const valoreSeparatore = \"---\";\n         \n         let arrayQuery = new Map(Object.entries (queryFreeCustomTaxonomiesValue));\n         \n         //controllo se per caso ho disabilitato una tassonomia, in quel caso devo rimuovere tutte le chiavi relative\n         const parametroTemp = nomeParametro.split (valoreSeparatore);\n         if (valoreParametro === false && parametroTemp[1]===\"enabled\"){\n            //pulisco il valore iniziale\n               arrayQuery.delete (parametroTemp[0]+'---'+parametroTemp[1]);\n            //pulisco tutte le chiavi relative   \n            arrayPossibiliValori.forEach (possibileValore=>{\n               arrayQuery.delete (parametroTemp[0]+'---'+possibileValore);\n            });   \n         }\n         \n         //altrimenti cambio il singolo valore\n         else {\n            arrayQuery.set (nomeParametro, valoreParametro);\n         }\n         \n         //setto oggetto queryFreeCustomTaxonomiesValue con i nuovi parametri\n         setAttributes( {\n            queryFreeCustomTaxonomiesValue: Object.fromEntries(arrayQuery)   \n            }) \n         \n\n        //variabile per vedere quante tassonomie devo mettere nella query finale..se sono più di una devo mettere anche campo relation, se sono zero non devo mettere nulla\n         let conteggioQuery = 0;\n         \n         //costruisco array finale con tutti i parametri da mettere in queryFreeValue\n         //faccio loop su tutte le tassonomie\n         let arrayTaxFinale = [];\n         queryFreeListCustomTaxonomies.forEach (tassonomia =>{\n            let arrayTaxTemp={};\n            //verifico se la tassonomia è attiva\n            if (arrayQuery.has(tassonomia+'---enabled')){\n               //ho una tassonomia, incremento il contatore\n               conteggioQuery ++;\n               \n               arrayTaxTemp['taxonomy'] = tassonomia; \n               if (arrayQuery.has(tassonomia+'---field')){\n                  arrayTaxTemp['field'] = arrayQuery.get(tassonomia+'---field'); \n               }\n               if (arrayQuery.has(tassonomia+'---terms')){               \n                  arrayTaxTemp['terms'] = (arrayQuery.get(tassonomia+'---terms')).split(','); \n               }\n               if (arrayQuery.has(tassonomia+'---include_children')){               \n                  arrayTaxTemp['include_children'] = arrayQuery.get(tassonomia+'---include_children');\n               }\n               if (arrayQuery.has(tassonomia+'---operator')){               \n                  arrayTaxTemp['operator'] = arrayQuery.get(tassonomia+'---operator');\n               }\n               //costruisco il singolo array temporaneo\n               arrayTaxFinale.push (arrayTaxTemp);   \n            }\n         });\n         \n         \n         let arrayQueryCompleto=[];\n         //verifico se ho trovato qualcosa\n         if (conteggioQuery == 0){\n            //non ho trovato nulla, la query finale è vuota\n            //la cancello se c'è in queryfreeValue\n            if (queryFreeValue.tax_query){\n               delete queryFreeValue.tax_query;\n            }\n         }\n         //se ho un solo elemento costruisco una query \"semplice\"\n         else {\n            if (conteggioQuery == 1) {\n               arrayQueryCompleto = arrayTaxFinale;\n            }\n         \n         //se ho più di una query devo mettere anche il campo relation\n            else if (conteggioQuery >1 ){\n               let eleTemp={};\n               if (arrayQuery.has('---relation')){\n                  eleTemp['relation'] = arrayQuery.get('---relation');\n               }\n               else {\n                  eleTemp['relation']='AND';\n               }\n               arrayQueryCompleto=[eleTemp,arrayTaxFinale];  \n            }\n         //setto il valore in queryfreeValue   \n            setAttributes({\n               queryFreeValue:{...queryFreeValue, ['tax_query']: arrayQueryCompleto  }\n            }) \n         }\n         \n      });\n      \n   \n    //richiamato da inspectorBlockQuery\n    //passa oggetto querypar\n    const inspectorCreateSingleBlock =(function (parametriQuery){\n      const listaCampi = Object.keys(parametriQuery);\n      \n      //let outSubBlocchiTemp={};\n      let outSubBlocchi =[];\n      //costruisco il singolo blocco\n\t  \n      listaCampi.forEach (campo =>{\n         //controllo se il campo è abilitato)\n         if (parametriQuery[campo].enabled){\n            let campoType = parametriQuery[campo].type ? parametriQuery[campo].type : '';\n            let campoFieldOption  =  parametriQuery[campo].fieldOption ? parametriQuery[campo].fieldOption : '';\n            const campoDescription  =  parametriQuery[campo].description ?' ('+ parametriQuery[campo].description +' )' : '';\n            \n            \n            //controllo che tipo di campo è e creo il blocco relativo\n            if ( parametriQuery[campo].fieldType == \"suggestion\"){\n               //se sul singolo campo vanno messi i suggerimenti richiamo la ricostruzione del campo ad hoc...  \n               let valoriSuggerimento ={};\n               if (campoFieldOption==\"formatAuthorSuggestions\"){\n                   valoriSuggerimento = formatAuthorSuggestions ;\n               }\n               else if (campoFieldOption==\"formatCategorySuggestions\"){\n                  valoriSuggerimento = formatCategorySuggestions;\n               }       \n                else if (campoFieldOption==\"formatTagSuggestions\"){\n                  valoriSuggerimento = formatTagSuggestions;\n               }\n               \n               const listaNomiSuggerimenti =   Object.keys(valoriSuggerimento);\n\t\t\t   \n               const valListaNomi =  queryFreeValue[campo] ? convertiIDinNomi (valoriSuggerimento,queryFreeValue[campo]) : [];\n               const outSubBlocchiTemp =( <FormTokenField\n                              label = {campo + campoDescription}\n                              value = { valListaNomi }\n                              suggestions= { listaNomiSuggerimenti }\n                              onChange={(tokens) => {\n                              if (tokens != \"\"){\n                                 setAttributes ({\n                                    queryFreeValue:{...queryFreeValue, [campo]: convertiNomiinID(valoriSuggerimento,tokens,campoType)} \n                                    });\n                                 }   \n                                if (tokens == \"\"){\n                                    clearQueryFreeValue(campo);\n                                 }  \n                                }   \n                              }\n                              />\n                            ); \n               outSubBlocchi.push (outSubBlocchiTemp);      \n            }\n            else if ( parametriQuery[campo].fieldType == \"textField\"){\n               const valElemento =  queryFreeValue[campo] ? queryFreeValue[campo] : '';\n               \n               const outSubBlocchiTemp= ( <TextControl\n                                    label= {campo + campoDescription}\n                                    help= {'Insert value for ' +campo + ' (type: '+campoType+') '}\n                                    value= { valElemento } \n                                    onChange={(value) =>{\n                                          setAttributes ({\n                                            queryFreeValue:{...queryFreeValue, [campo]:value} \n                                          })\n                                       if (value===\"\"){\n                                          clearQueryFreeValue(campo);\n                                       }   \n                                      }\n                                    }\n                                 />);\n            \n            \n            \n            \n            outSubBlocchi.push (outSubBlocchiTemp);  \n \n            }\n            else if ( parametriQuery[campo].fieldType == \"optionField\"){\n               const valElemento =  queryFreeValue[campo] ? queryFreeValue[campo] : '';\n               const optionValue = Object.keys(campoFieldOption).map(key => ({value: key, label: campoFieldOption[key]}));\n               \n               //aggiungo campo vuoto alle opzioni\n               optionValue.unshift({value: '', label: 'Please select'});\n               const outSubBlocchiTemp = ( <SelectControl\n                           label= {campo + campoDescription}\n                           value={ valElemento }\n                           options={ optionValue }\n                           onChange={ ( value ) => {\n                                 setAttributes( {\n                                    queryFreeValue:{...queryFreeValue, [campo]:value} \n                                 } )\n                                 if (value===\"\"){\n                                       clearQueryFreeValue(campo);\n                                 }   \n                              }\n                           }\n                         />);\n                                 \n              outSubBlocchi.push (outSubBlocchiTemp); \n            }\n         }\n         \n      })\n      return  (outSubBlocchi);    \n    })\n   \n   //richiamato da inspectorCreateBlockTaxonomy passando il nome della tassonomi.\n   //serve per creare i blocchi standard per ogni custom taxonomy   \n   //vengono passati i parametri:\n   // tassonomia -> nome della tassonomia\n   // parametriSingleQuery -> lista dei parametri da mettere in ogni singola query/tassonomia\n   const inspectorCreateSubBlockTaxonomy = (function (tassonomia,parametriSingleQuery){\n      //trovo i campi da mettere nel singolo blocco\n     \n      let campiSingolaQuery = Object.keys(parametriSingleQuery);\n      \n      let outSubBlocchi=[];\n      \n      const parCustomQueryField =  queryFreeCustomTaxonomiesValue[tassonomia+'---field'] ? queryFreeCustomTaxonomiesValue[tassonomia+'---field'] :'';\n      const parCustomQueryTerms = queryFreeCustomTaxonomiesValue[tassonomia+'---terms'] ? queryFreeCustomTaxonomiesValue[tassonomia+'---terms'] :'';\n      const parCustomQueryIncChild = queryFreeCustomTaxonomiesValue[tassonomia+'---include_children'] ? queryFreeCustomTaxonomiesValue[tassonomia+'---include_children'] :'';\n      const parCustomQueryOperator = queryFreeCustomTaxonomiesValue[tassonomia+'---operator'] ? queryFreeCustomTaxonomiesValue[tassonomia+'---operator'] :'';\n      \n      \n      //costruisco il blocco in base al tipo:\n      campiSingolaQuery.forEach (campo =>{\n         \n         const campoDescription = parametriSingleQuery[campo].description ? ' ('+ parametriSingleQuery[campo].description+')': '';\n         const valElemento = queryFreeCustomTaxonomiesValue[tassonomia+'---'+campo] ? queryFreeCustomTaxonomiesValue[tassonomia+'---'+campo] : '';\n         if (parametriSingleQuery[campo].fieldType ==\"optionField\"){\n             //recupero le info e le opzioni sul campo\n             const optionValue = Object.keys(parametriSingleQuery[campo].fieldOption).map(key => ({value: key, label: parametriSingleQuery[campo].fieldOption[key]}));\n             \n             optionValue.unshift({value: '', label: 'Please select'});\n            //costruisco il blocco\n            \n            const outSubBlocchiTemp = ( <SelectControl\n                           label= {campo + campoDescription}\n                           value={ valElemento }\n                           options={ optionValue }\n                           onChange={ ( value ) =>{\n                                    setAttributes( {\n                                       queryFreeCustomTaxonomiesValue:{...queryFreeCustomTaxonomiesValue, [tassonomia+'---'+campo]:value} \n                                    } )\n                                    aggiornaQueryCustomTax(tassonomia+'---'+campo , value);\n                                    }\n                           }\n                         />);\n                                 \n              outSubBlocchi.push (outSubBlocchiTemp); \n         }\n         \n         else if (parametriSingleQuery[campo].fieldType ==\"textField\"){\n            const outSubBlocchiTemp =(<TextControl\n                           label= {campo + campoDescription}\n                           value= { valElemento } \n                           onChange={(value) =>{\n                              setAttributes ({\n                                 queryFreeCustomTaxonomiesValue:{...queryFreeCustomTaxonomiesValue, [tassonomia+'---'+campo]:value} \n                                 })\n                              aggiornaQueryCustomTax(tassonomia+'---'+campo , value);\n                              }\n                           }\n                         />);\n            \n            outSubBlocchi.push (outSubBlocchiTemp); \n         }\n         \n      \n      });   \n      \n      return (outSubBlocchi);\n   \n   });\n     \n     //richiamato da inspectorBlockQuery per creare la query per le custom taxonomy\n    //passa array con lista tassonomie\n    \n   const inspectorCreateBlockTaxonomy = (function  (oggettoTassonomia){\n      \n      //variabili \n      const arrayTassonomie = oggettoTassonomia.customTaxonomyArray;\n      const parametriSingleQuery = oggettoTassonomia.singleTaxQueryPar;\n  \n      \n      //preparo le variabili che mi serviranno dopo   \n         \n         let outBlocchiCtTemp={};\n         let outBlocchiCT =[];\n         let contatoreTassonomie = 0; //serve per vedere quante tassonomie ho attive    \n         \n          arrayTassonomie.forEach(tassonomia =>{\n                  const parCustomQueryTaxEnabled = queryFreeCustomTaxonomiesValue[tassonomia+'---enabled'] ? queryFreeCustomTaxonomiesValue[tassonomia+'---enabled'] : false ;\n                  //se la tassonomia è attiva incremento il contatore\n                  if (parCustomQueryTaxEnabled){\n                     contatoreTassonomie ++;\n                  }\n                  outBlocchiCtTemp = (<PanelBody title={ __( tassonomia ) } initialOpen={ false }>\n                                       <ToggleControl\n                                          label={ __( 'Use custom taxonomy \"'+tassonomia+' \"' ) }\n                                          checked={ parCustomQueryTaxEnabled }\n                                          onChange={ ( value ) =>{\n                                             setAttributes( {\n                                                queryFreeCustomTaxonomiesValue:{...queryFreeCustomTaxonomiesValue, [tassonomia+'---enabled']:value   }\n                                             }) \n                                             aggiornaQueryCustomTax(tassonomia+'---enabled',value);\n                                          }   \n                                          }\n                                       />\n                                       { parCustomQueryTaxEnabled && (\n                                          <BaseControl>\n                                             { inspectorCreateSubBlockTaxonomy (tassonomia,parametriSingleQuery) }\n                                          </BaseControl>\n                                       )}\n                                    </PanelBody>);\n                  outBlocchiCT.push(outBlocchiCtTemp);\n               });\n           \n         \n         //se ho più di una tassonomia attiva mostro il campo per la \"relatzione\"\n         if (contatoreTassonomie > 1){\n            const campo = Object.keys(oggettoTassonomia.subQueryPar);\n            const campoDescription = oggettoTassonomia.subQueryPar[campo].description ? ' ('+oggettoTassonomia.subQueryPar[campo].description+')' : '';\n            const valElemento = queryFreeCustomTaxonomiesValue['---'+campo] ? queryFreeCustomTaxonomiesValue['---'+campo] : '';\n            const optionValue = Object.keys(oggettoTassonomia.subQueryPar[campo].fieldOption).map(key => ({value: key, label: oggettoTassonomia.subQueryPar[campo].fieldOption[key]}));\n            \n            optionValue.unshift({value: '', label: 'Please select'});\n            \n            outBlocchiCtTemp = (<SelectControl\n                           label= {campo + campoDescription}\n                           value= {valElemento}\n                           options= { optionValue }\n                           onChange={ ( value ) =>{\n                              setAttributes( {\n                                 queryFreeCustomTaxonomiesValue:{...queryFreeCustomTaxonomiesValue, ['---'+campo]:value   } \n                              } )\n                              aggiornaQueryCustomTax('---'+campo ,value);\n                              }\n                           }\n                         />\n            )\n            outBlocchiCT.push(outBlocchiCtTemp);\n         }\n        \n         \n       return (outBlocchiCT);  \n      \n    });\n     \n     const inspectorBlockQuery = (function (){\n         const ListaBlocchiJson = metadataquery.ParametersBlock;\n         const ListaBlocchi =  Object.entries(ListaBlocchiJson);\n         \n         var outBlocchiTemp={};\n         var outBlocchi=[];\n\n \n         ListaBlocchi.forEach(blocco => {\n            if ( blocco[0]!=\"Taxonomy Parameters\"){\n               //contollo che il blocco sia abilitato\n               if (blocco[1].enabled){\n                  outBlocchiTemp = (<PanelBody title={ __( blocco[0] ) } initialOpen={ false }>\n                                        <BaseControl>\n                                        {inspectorCreateSingleBlock (blocco[1].querypar)}\n                                        </BaseControl>\n                                 </PanelBody>);\n                  outBlocchi.push(outBlocchiTemp);\n               }\n            \n            }\n            else {\n                //verifico che il blocco sia abilitato\n               if (blocco[1].enabled){\n\t\t\t\t  //controllo se ho la lista delle tassonomie impostate nel file query_param.json \n\t\t\t\tlet listaTassonomie = [];\n\t\t\t\t  if ((blocco[1].customTaxonomyArray) && (blocco[1].customTaxonomyArray.length!==0)){\n\t\t\t\t\tlistaTassonomie = blocco[1].customTaxonomyArray;\n\t\t\t\t  }\n\t\t\t\t  //controllo se ho tassonomie custom impostate in wp\n\t\t\t\t  else {\n\t\t\t\t\tlistaTassonomie = ListCustomTaxonomies;\n\t\t\t\t  }\n                  //if ((blocco[1].customTaxonomyArray) && (blocco[1].customTaxonomyArray.length!==0)){\n\t\t\t\t\tif ((listaTassonomie)&&(listaTassonomie.length!==0)){  \n\t\t\t\t\t\tblocco[1].customTaxonomyArray=listaTassonomie;\n                       //setto il valore della lista delle custom taxonomy (serve dopo per ricreare array corretto\n                       setAttributes( {\n                          queryFreeListCustomTaxonomies:blocco[1].customTaxonomyArray \n                        });\n                        outBlocchiTemp = (<PanelBody title={ __( blocco[0] ) } initialOpen={ false }>\n                                           <BaseControl>\n                                           { inspectorCreateBlockTaxonomy (blocco[1] )}\n                                           </BaseControl>\n                                    </PanelBody>);\n                        outBlocchi.push(outBlocchiTemp);\n                     }\n               }\n            }   \n          });  \n         return (outBlocchi);\n      });\n      \n      const showFormattedQueryParp = (function(){\n         const stringQueryPar = JSON.stringify(queryFreeValue,null,'<br>');\n         let outputHTML =\"\";\n         if (stringQueryPar !== undefined){\n            outputHTML = stringQueryPar.replaceAll(\"}\",\"<br>}\");\n            outputHTML = outputHTML.replaceAll (\"<br><br>\",\"\");\n            outputHTML = outputHTML.replaceAll (\"<br>]\",\"]\");\n            outputHTML = outputHTML.replaceAll (\"[\",\"array (\");\n            outputHTML = outputHTML.replaceAll (\"]\",\")\");\n            outputHTML = outputHTML.replaceAll (\":\",\" : \");\n            outputHTML += \"<p></p>\";\n         }   \n         \n         return (outputHTML);\n      });\n\n      const inspectorControls = (\n           <InspectorControls>\n\t\t\t\t<PanelBody title={( 'Tipo query' ) }>\n\t\t\t\t\t<BaseControl>\n\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\tlabel={__('Seleziona tipo di query da usare')}\n\t\t\t\t\t\t\thelp=\"Imposta il tipo di query da utilizzare, 'No Query' richiede template esterno\"\n\t\t\t\t\t\t\tselected={ TipoQuery }\n\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t{ label: 'No query', value: 'no-query' },\n\t\t\t\t\t\t\t\t\t{ label: 'Wordpress query', value: 'wp-query' },\n\t\t\t\t\t\t\t\t\t{ label: 'Custom query', value: 'custom-query' },\n\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\tonChange={ ( option ) => { setAttributes( { TipoQuery: option } ) } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BaseControl>\n\t\t\t   </PanelBody>  \n\t\t\t   <PanelBody title={( 'Tipo visualizzzione' ) }>\n\t\t\t\t\t<BaseControl>\n\t\t\t\t\t\t <ToggleControl\n\t\t\t\t\t\t\tlabel={ __(  'External Pattern' ) }\n\t\t\t\t\t\t\thelp={ __( 'Attiva per usare file esterno come pattern di visualizzazione.') }\n\t\t\t\t\t\t\tchecked={ ExtView }\n\t\t\t\t\t\t\tonChange={ ( value ) => \n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tExtView:value,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ ExtView == true && (\n\t\t\t\t\t\t<BaseControl>\n\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t   label=\"Tipo visualizzazione\"\n\t\t\t\t\t\t\t\t   value={ Visualizzazione }\n\t\t\t\t\t\t\t\t   options= {ListaVisualizzazioni }\n\t\t\t\t\t\t\t\t   onChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\t\t\t   Visualizzazione: value,\n\t\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t />\n\t\t\t\t\t\t </BaseControl>\n\t\t\t\t\t\t) }\t\t \n\t\t\t\t\t</BaseControl>  \n\t\t\t\t</PanelBody>  \n\t\t\t\t{ TipoQuery != 'no-query' && ( \n\t\t\t\t\t<BaseControl>\n\t\t\t\t\t\t<PanelBody title={( 'Wp Custom Query parameters' ) }>\n\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\tlabel='Numero di post'\n\t\t\t\t\t\t\t\thelp='Insert numero di post da visualizzare'\n\t\t\t\t\t\t\t\tvalue={ postsToShow }\n\t\t\t\t\t\t\t\t\tonChange={(value) =>\n\t\t\t\t\t\t\t\t\t\tsetAttributes ({\n\t\t\t\t\t\t\t\t\t\t\tpostsToShow:  Number.parseInt(value)\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Use pagination' ) }\n\t\t\t\t\t\t\t\thelp='Non funziona con pattern esterni in php. Con pattern json funziona solo se definito nel pattern'\n\t\t\t\t\t\t\t\tchecked={ displayPagination }\n\t\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\t   setAttributes( {\n\t\t\t\t\t\t\t\t\t  displayPagination:value,\n\t\t\t\t\t\t\t\t   }) \n\t\t\t\t\t\t\t\t}   \n\t\t\t\t\t\t\t />\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t <ToggleControl\n\t\t\t\t\t\t\t label={  __( 'Mostra Riassunto')  }\n\t\t\t\t\t\t\t help='Non funziona con pattern esterni in php. Con pattern json funziona solo se definito nel pattern'\n\t\t\t\t\t\t\t checked={ displayPostContent }\n\t\t\t\t\t\t\t onChange={ ( value ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { displayPostContent: value } )\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t  />\n\t\t\t\t\t\t  \n\t\t\t\t\t\t  { displayPostContent && (\n\t\t\t\t\t\t  <BaseControl>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t   label={ __( 'Max number of words in excerpt' ) }\n\t\t\t\t\t\t\t\t   value={ excerptLength }\n\t\t\t\t\t\t\t\t   onChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t  setAttributes( { excerptLength: value } )\n\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t   min={ MIN_EXCERPT_LENGTH }\n\t\t\t\t\t\t\t\t   max={ MAX_EXCERPT_LENGTH }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  </BaseControl>      \n\t\t\t\t\t\t\t ) }\n\t\t\t\t\t\t\t \n\t\t\t\t\t\n\t\t\t\t\t\t  { TipoQuery == 'custom-query' && (\n\t\t\t\t\t\t\t <BaseControl>\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t <ToggleControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Use advanced version for query' ) }\n\t\t\t\t\t\t\t\tchecked={ queryTypeAdvanced }\n\t\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\t   setAttributes( {\n\t\t\t\t\t\t\t\t\t  queryTypeAdvanced:value,\n\t\t\t\t\t\t\t\t   }) \n\t\t\t\t\t\t\t\t}   \n\t\t\t\t\t\t\t />\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t { queryTypeAdvanced == false && (\n\t\t\t\t\t\t\t\t<BaseControl>\n\t\t\t\t\t\t\t\t   <TextControl\n\t\t\t\t\t\t\t\t\t  label='Post ID'\n\t\t\t\t\t\t\t\t\t  help='Insert post ID or posts ID list with comma'\n\t\t\t\t\t\t\t\t\t  value={ postID }\n\t\t\t\t\t\t\t\t\t  onChange={(value) =>\n\t\t\t\t\t\t\t\t\t\t\t\t  setAttributes ({\n\t\t\t\t\t\t\t\t\t\t\t\t\t postID: value\n\t\t\t\t\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t   />\n\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t   <SelectControl\n\t\t\t\t\t\t\t\t\t  label=\"Order\"\n\t\t\t\t\t\t\t\t\t  value={ order }\n\t\t\t\t\t\t\t\t\t  options={ [\n\t\t\t\t\t\t\t\t\t\t { value: 'ASC', label: 'ascending (A -> Z)' },\n\t\t\t\t\t\t\t\t\t\t { value: 'DESC', label: 'descending (Z -> A)' },\n\t\t\t\t\t\t\t\t\t  ] }\n\t\t\t\t\t\t\t\t\t  onChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t\t\t   setAttributes( {\n\t\t\t\t\t\t\t\t\t\t\t\t  order: value,\n\t\t\t\t\t\t\t\t\t\t\t   } )\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t   <SelectControl\n\t\t\t\t\t\t\t\t\t  label=\"Orderby\"\n\t\t\t\t\t\t\t\t\t  value={ orderBy }\n\t\t\t\t\t\t\t\t\t  options={ [\n\t\t\t\t\t\t\t\t\t\t { value: 'ID‘', label: 'post ID' },\n\t\t\t\t\t\t\t\t\t\t { value: 'author', label: 'Author' },\n\t\t\t\t\t\t\t\t\t\t { value: 'title', label: 'Post title' },\n\t\t\t\t\t\t\t\t\t\t { value: 'name', label: 'Post name (slug)' },\n\t\t\t\t\t\t\t\t\t\t { value: 'date', label: 'Date' },\n\t\t\t\t\t\t\t\t\t\t { value: 'modified', label: 'Modified date' },\n\t\t\t\t\t\t\t\t\t\t { value: 'rand', label: 'Random' },\n\t\t\t\t\t\t\t\t\t  ] }\n\t\t\t\t\t\t\t\t\t  onChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t\t\t   setAttributes( {\n\t\t\t\t\t\t\t\t\t\t\t\t  orderBy: value,\n\t\t\t\t\t\t\t\t\t\t\t   } )\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t  />                         \n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t   <QueryControls  \n\t\t\t\t\t\t\t\t\t  onAuthorChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t\t setAttributes( {\n\t\t\t\t\t\t\t\t\t\t\tselectedAuthor:\n\t\t\t\t\t\t\t\t\t\t\t'' !== value ? Number( value ) : undefined,\n\n\t\t\t\t\t\t\t\t\t\t } )\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  authorList={ authorList ?? [] }\n\t\t\t\t\t\t\t\t\t  selectedAuthorId={ selectedAuthor } \n\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t\t  categorySuggestions={ categorySuggestions }\n\t\t\t\t\t\t\t\t\t  onCategoryChange={ selectCategories }\n\t\t\t\t\t\t\t\t\t  selectedCategories={ categories }\n\t\t\t\t\t\t\t\t   />\n\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t</BaseControl> \n\t\t\t\t\t\t\t   ) }\n\t\t\t\t\t\t\t { queryTypeAdvanced  && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t   \n\t\t\t\t\t\t\t\t   <p>{ __( 'Current query args:' ) }</p>\n\t\t\t\t\t\t\t\t   \n\n\t\t\t\t\t\t\t\t   { React.createElement(\"div\", { dangerouslySetInnerHTML: { __html: showFormattedQueryParp() } }) }\n\n\t\t\t\t\t\t\t\t   <p>{ __( 'Select array args' ) }</p>\n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t   { inspectorBlockQuery() } \n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t   ) }\n\t\t\t\t\t\t   </BaseControl>    \n\t\t\t\t\t\t  ) }\n\t\t\t\t\t</PanelBody> \n\t\t\t\t   \n\t\t\t\t   { ExtView == false  && (\n\t\t\t\t\t   <PanelBody title={ __( 'Featured image settings' ) }>\n\t\t\t\t\t\t  <ToggleControl\n\t\t\t\t\t\t\t label={ __( 'Display featured image' ) }\n\t\t\t\t\t\t\t checked={ displayFeaturedImage }\n\t\t\t\t\t\t\t onChange={ ( value ) =>\n\t\t\t\t\t\t\t\tsetAttributes( { displayFeaturedImage: value } )\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t  />\n\t\t\t\t\t\t  { displayFeaturedImage && (\n\t\t\t\t\t\t\t <>\n\t\t\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t\t   <label>{  __( 'Image Background color')  }</label> \n\t\t\t\t\t\t\t\t   <ColorPalette \n\t\t\t\t\t\t\t\t\t  onChange={(value) =>\n\t\t\t\t\t\t\t\t\t\t setAttributes ({\n\t\t\t\t\t\t\t\t\t\t\tfeaturedImageBgColor: value\n\t\t\t\t\t\t\t\t\t\t })\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t   />\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t<ImageSizeControl\n\t\t\t\t\t\t\t\t   onChange={ ( value ) => {\n\t\t\t\t\t\t\t\t\t  const newAttrs = {};\n\t\t\t\t\t\t\t\t\t  if ( value.hasOwnProperty( 'width' ) ) {\n\t\t\t\t\t\t\t\t\t\t newAttrs.featuredImageSizeWidth =\n\t\t\t\t\t\t\t\t\t\t\tvalue.width;\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  if ( value.hasOwnProperty( 'height' ) ) {\n\t\t\t\t\t\t\t\t\t\t newAttrs.featuredImageSizeHeight =\n\t\t\t\t\t\t\t\t\t\t\tvalue.height;\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  setAttributes( newAttrs );\n\t\t\t\t\t\t\t\t   } }\n\t\t\t\t\t\t\t\t   slug={ featuredImageSizeSlug }\n\t\t\t\t\t\t\t\t   width={ featuredImageSizeWidth }\n\t\t\t\t\t\t\t\t   height={ featuredImageSizeHeight }\n\t\t\t\t\t\t\t\t   imageWidth={ defaultImageWidth }\n\t\t\t\t\t\t\t\t   imageHeight={ defaultImageHeight }\n\t\t\t\t\t\t\t\t   imageSizeOptions={ imageSizeOptions }\n\t\t\t\t\t\t\t\t   onChangeImage={ ( value ) =>\n\t\t\t\t\t\t\t\t\t  setAttributes( {\n\t\t\t\t\t\t\t\t\t\t featuredImageSizeSlug: value,\n\t\t\t\t\t\t\t\t\t\t featuredImageSizeWidth: undefined,\n\t\t\t\t\t\t\t\t\t\t featuredImageSizeHeight: undefined,\n\t\t\t\t\t\t\t\t\t  } )\n\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BaseControl>\n\t\t\t\t\t\t\t\t   <label>\n\t\t\t\t\t\t\t\t\t  { __( 'Image alignment' ) }\n\t\t\t\t\t\t\t\t   </label>\n\t\t\t\t\t\t\t\t   <BlockAlignmentToolbar\n\t\t\t\t\t\t\t\t\t  value={ featuredImageAlign }\n\t\t\t\t\t\t\t\t\t  onChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t\t setAttributes( {\n\t\t\t\t\t\t\t\t\t\t\tfeaturedImageAlign: value,\n\t\t\t\t\t\t\t\t\t\t } )\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t  controls={ [ 'left', 'center', 'right' ] }\n\t\t\t\t\t\t\t\t\t  isCollapsed={ false }\n\t\t\t\t\t\t\t\t   />\n\t\t\t\t\t\t\t\t</BaseControl>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t   label={ __( 'Add link to featured image' ) }\n\t\t\t\t\t\t\t\t   checked={ addLinkToFeaturedImage }\n\t\t\t\t\t\t\t\t   onChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t  setAttributes( {\n\t\t\t\t\t\t\t\t\t\t addLinkToFeaturedImage: value,\n\t\t\t\t\t\t\t\t\t  } )\n\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t </>\n\t\t\t\t\t\t  ) }\n\t\t\t\t\t   </PanelBody>\n\t\t\t\t\t)}\n\t\t\t\t\t{ ExtView == false  && (\n\t\t\t\t\t   <PanelBody title={ __( 'Title settings' ) }>\n\t\t\t\t\t\t  <SelectControl\n\t\t\t\t\t\t\t\t\tlabel=\"Select TAG\"\n\t\t\t\t\t\t\t\t\tvalue={ postTitleFormat }\n\t\t\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t\t\t{ value: 'H1', label: 'H1' },\n\t\t\t\t\t\t\t\t{ value: 'H2', label: 'H2' },\n\t\t\t\t\t\t\t\t{ value: 'H3', label: 'H3' },\n\t\t\t\t\t\t\t\t{ value: 'H4', label: 'H4' },\n\t\t\t\t\t\t\t\t{ value: 'H5', label: 'H5' },\n\t\t\t\t\t\t\t\t{ value: 'H6', label: 'H6' },\n\t\t\t\t\t\t\t\t{ value: 'p', label: 'p' },\n\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t  setAttributes( {\n\t\t\t\t\t\t\t\t\t\t postTitleFormat: value,\n\t\t\t\t\t\t\t\t\t  } )\n\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t  <BaseControl>\n\t\t\t\t\t\t\t <BaseControl.VisualLabel>\n\t\t\t\t\t\t\t\t{ __( 'Title alignment' ) }\n\t\t\t\t\t\t\t </BaseControl.VisualLabel>\n\t\t\t\t\t\t\t <BlockAlignmentToolbar\n\t\t\t\t\t\t\t\tvalue={ postTitleAlign }\n\t\t\t\t\t\t\t\t   onChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t  setAttributes( {\n\t\t\t\t\t\t\t\t\t\t postTitleAlign: value,\n\t\t\t\t\t\t\t\t\t  } )\n\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\tcontrols={ [ 'left', 'center', 'right' ] }\n\t\t\t\t\t\t\t\tisCollapsed={ false }\n\t\t\t\t\t\t\t />\n\t\t\t\t\t\t\t <fieldset>\n\t\t\t\t\t\t\t\t<label>{  __( 'Title Background color')  }</label> \n\t\t\t\t\t\t\t\t<ColorPalette \n\t\t\t\t\t\t\t\t   onChange={(value) =>\n\t\t\t\t\t\t\t\t\t  setAttributes ({\n\t\t\t\t\t\t\t\t\t\t postTitleBgColor: value\n\t\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t </fieldset>\n\t\t\t\t\t\t  </BaseControl>\n\t\t\t\t\t   </PanelBody>\n\t\t\t\t\t   )}\n\t\t\t\t\t{ ExtView == false  && displayPostContent && (\n\t\t\t\t\t\t  <PanelBody title={ __( 'Post content settings' ) }>\n\t\t\t\t\t\t  <BaseControl>\n\t\t\t\t\t\t\t\t <fieldset>\n\t\t\t\t\t\t\t\t   <label>{  __( 'Content Background color')  }</label> \n\t\t\t\t\t\t\t\t   <ColorPalette \n\t\t\t\t\t\t\t\t\t  onChange={(value) =>\n\t\t\t\t\t\t\t\t\t\t setAttributes ({\n\t\t\t\t\t\t\t\t\t\t\tpostContentBgColor: value\n\t\t\t\t\t\t\t\t\t\t })\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t   />\n\t\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t  </BaseControl>      \n\t\t\t\t\t\t  </PanelBody>\n\t\t\t\t\t\t\t ) }\n\t\t\t\t\t   \n\t\t\t\t\t{ ExtView == false  && (\n\t\t\t\t\t   <PanelBody title={( 'Post Layout Control' ) }>\n\t\t\t\t\t\t  { postLayout === 'grid' && (\n\t\t\t\t\t\t\t <RangeControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\t\tvalue={ columns }\n\t\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\t   setAttributes( { columns: value } )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tmin={ 2 }\n\t\t\t\t\t\t\t\tmax={\n\t\t\t\t\t\t\t\t   ! hasPosts\n\t\t\t\t\t\t\t\t\t  ? MAX_POSTS_COLUMNS\n\t\t\t\t\t\t\t\t\t  : Math.min(\n\t\t\t\t\t\t\t\t\t\t\tMAX_POSTS_COLUMNS,\n\t\t\t\t\t\t\t\t\t\t\thasPostsMAX\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t />\n\t\t\t\t\t\t  ) }\n\t\t\t\t\t   </PanelBody> \n\t\t\t\t   \n\t\t\t\t\t\t) }\t\n\t\t\t\t</BaseControl>\t\n\t\t\t\t)} \n             </InspectorControls>\n         );\n\n         \n        return (\n            <div { ...blockProps }>\n               { inspectorControls }\n               \n               <BlockControls>\n                  <ToolbarGroup controls={ layoutControls } />\n               </BlockControls>   \n               \n               \n               <ServerSideRender\n                    block = 'format-advq-ep/fm-ql-show'\n                    attributes={ attributes }\n                    LoadingResponsePlaceholder={ () => <Spinner /> }\n                />\n\n\n            </div>\n        );\n};\n\n\n\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n* Import per internazionalizzazione\n*/\nimport { __, sprintf } from '@wordpress/i18n';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n * import di save non serve per blocchi dinamici\n */\nimport Edit from './edit';\n//import save from './save';\n\n/**\n * Import from json\n */\nimport metadata from './block.json';\nconst { name, ...settings } = metadata;\n\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n * \n * export di save non serve per blocchi dinamici\n */\nregisterBlockType(name, {\n\t...settings,\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\t// save,\n});\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"date\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkformat_qg_view\"] = globalThis[\"webpackChunkformat_qg_view\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["MIN_EXCERPT_LENGTH","MAX_EXCERPT_LENGTH","MAX_POSTS_COLUMNS","ServerSideRender","get","includes","invoke","isUndefined","pickBy","classnames","BaseControl","PanelBody","Placeholder","QueryControls","RangeControl","SelectControl","RadioControl","Spinner","ToggleControl","ToolbarGroup","TextControl","FormTokenField","__experimentalNumberControl","NumberControl","__","sprintf","dateI18n","format","__experimentalGetSettings","InspectorControls","BlockAlignmentToolbar","BlockControls","ColorPalette","__experimentalImageSizeControl","ImageSizeControl","useBlockProps","store","blockEditorStore","useSelect","pin","list","grid","coreStore","useState","metadataquery","CATEGORIES_LIST_QUERY","per_page","context","USERS_LIST_QUERY","has_published_posts","ListCustomTaxonomies","external_data","lista_tassonomie","ArrayListaTemplate","array_template","FormatCustomQueryEdit","attributes","setAttributes","_categoriesList$reduc","_authorList$reduce","_tagsList$reduce","_categoriesList$reduc2","ListaVisualizzazioni","Object","keys","map","key","value","label","TipoQuery","ExtView","Visualizzazione","queryTypeAdvanced","queryFreeValue","queryFreeCustomTaxonomiesValue","queryFreeListCustomTaxonomies","postID","postsToShow","displayPagination","order","orderBy","categories","selectedAuthor","postTitleAlign","postTitleBgColor","postTitleFormat","displayFeaturedImage","displayPostContent","displayPostDate","displayAuthor","postContentBgColor","postLayout","columns","excerptLength","featuredImageAlign","featuredImageBgColor","featuredImageSizeSlug","featuredImageSizeWidth","featuredImageSizeHeight","addLinkToFeaturedImage","imageSizes","latestPosts","defaultImageWidth","defaultImageHeight","categoriesList","tagsList","authorList","select","getEntityRecords","getUsers","settings","getSettings","catIds","length","cat","id","latestPostsQuery","author","orderby","_embed","imageDimensions","imageSizeOptions","filter","slug","name","formatCategorySuggestions","reduce","accumulator","category","formatAuthorSuggestions","formatTagSuggestions","tag","categorySuggestions","selectCategories","tokens","hasNoSuggestion","some","token","allCategories","blockProps","className","layoutControls","icon","title","onClick","isActive","hasPosts","hasPostsMAX","clearQueryFreeValue","nomeParametro","arrayValori","entries","nuovoArrayPulito","forEach","elemento","push","fromEntries","convertiIDinNomi","oggettoSuggerimenti","idElemento","listaSuggerimentiID","arrayValIDElemento","split","returnListaNomi","Array","prototype","call","singoloValore","sugg","find","nomeElemento","convertiNomiinID","tipoRisultato","listaSuggerimentiNome","arrayValNomeElemento","returnListaID","toString","aggiornaQueryCustomTax","valoreParametro","arrayPossibiliValori","valoreSeparatore","arrayQuery","Map","parametroTemp","delete","possibileValore","set","conteggioQuery","arrayTaxFinale","tassonomia","arrayTaxTemp","has","arrayQueryCompleto","tax_query","eleTemp","inspectorCreateSingleBlock","parametriQuery","listaCampi","outSubBlocchi","campo","enabled","campoType","type","campoFieldOption","fieldOption","campoDescription","description","fieldType","valoriSuggerimento","listaNomiSuggerimenti","valListaNomi","outSubBlocchiTemp","createElement","suggestions","onChange","valElemento","help","optionValue","unshift","options","inspectorCreateSubBlockTaxonomy","parametriSingleQuery","campiSingolaQuery","parCustomQueryField","parCustomQueryTerms","parCustomQueryIncChild","parCustomQueryOperator","inspectorCreateBlockTaxonomy","oggettoTassonomia","arrayTassonomie","customTaxonomyArray","singleTaxQueryPar","outBlocchiCtTemp","outBlocchiCT","contatoreTassonomie","parCustomQueryTaxEnabled","initialOpen","checked","subQueryPar","inspectorBlockQuery","ListaBlocchiJson","ParametersBlock","ListaBlocchi","outBlocchiTemp","outBlocchi","blocco","querypar","listaTassonomie","showFormattedQueryParp","stringQueryPar","JSON","stringify","outputHTML","undefined","replaceAll","inspectorControls","selected","option","Number","parseInt","min","max","onAuthorChange","selectedAuthorId","onCategoryChange","selectedCategories","Fragment","React","dangerouslySetInnerHTML","__html","newAttrs","hasOwnProperty","width","height","imageWidth","imageHeight","onChangeImage","controls","isCollapsed","VisualLabel","Math","required","block","LoadingResponsePlaceholder","registerBlockType","Edit","metadata","edit"],"sourceRoot":""}